<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="https://newzone.top/rss.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://newzone.top/rss.xml" rel="self" type="application/rss+xml"/>
    <title>LearnData-开源笔记</title>
    <link>https://newzone.top/</link>
    <description>开源工具、效率方法、心理学探索的自我提升笔记，记录并输出一切能让自己提升的知识。</description>
    <language>zh-CN</language>
    <pubDate>Tue, 04 Apr 2023 12:40:58 GMT</pubDate>
    <lastBuildDate>Tue, 04 Apr 2023 12:40:58 GMT</lastBuildDate>
    <generator>vuepress-plugin-feed2</generator>
    <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
    <copyright>Copyright by 清顺</copyright>
    <image>
      <title>LearnData-开源笔记</title>
      <url>https://newzone.top/logo.svg</url>
      <link>https://newzone.top/</link>
    </image>
    <category>系统</category>
    <category>网络</category>
    <category>服务器</category>
    <category>自动化</category>
    <category>健康</category>
    <category>博客</category>
    <item>
      <title>加速 SMB 协议，让 PC 变身小型 NAS</title>
      <link>https://newzone.top/posts/2017-09-03-smb_lan_sharing.html</link>
      <guid>https://newzone.top/posts/2017-09-03-smb_lan_sharing.html</guid>
      <source url="https://newzone.top/rss.xml">加速 SMB 协议，让 PC 变身小型 NAS</source>
      <description>Windows 系统开启 SMB 协议： 打开「控制面板」窗口，在「类别」查看方式下单击「程序」。 打开「程序」窗口，单击「启用或关闭 windows 功能」。 打开「windows 功能」窗口，勾选 SMB 直通。 勾选「远程差分压缩 API 支持」。</description>
      <category>系统</category>
      <pubDate>Sun, 03 Sep 2017 20:57:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>Windows 系统开启 SMB 协议：</p>
<ol>
<li>
<p>打开「控制面板」窗口，在「类别」查看方式下单击「程序」。</p>
<figure><img src="https://pic1.zhimg.com/v2-af3e5c2a16a1f245ac6584097c53be60_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>打开「程序」窗口，单击「启用或关闭 windows 功能」。</p>
<figure><img src="https://pic1.zhimg.com/v2-36207f67a5eb3aeb8ee7c1ae855b13dc_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>打开「windows 功能」窗口，勾选 SMB 直通。</p>
<figure><img src="https://pic3.zhimg.com/v2-b1feb5554e6f1da003266be9cb470dfe_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>勾选「远程差分压缩 API 支持」。</p>
<figure><img src="https://pic4.zhimg.com/v2-c5fc3e3d771b6e4bd2516372c69b340b_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
</ol>
<p>网上很多教程都要求关闭“远程差分压缩”复选框，这是对“远程差分压缩”的误解。</p>
<p>官方解释：远程差分压缩 (RDC) 功能是一组应用程序编程接口 (API)，这些应用程序可用于确定某个文件集是否发生了变化，如果是，就检测哪部分文件进行了更改。RDC 检测文件中数据的插入、删除和重新排列，使应用程序能够仅复制文件的已更改部分。这对于在有限带宽网络（如广域网 (WAN) 连接）上复制文件非常有用。</p>
]]></content:encoded>
      <enclosure url="https://pic1.zhimg.com/v2-af3e5c2a16a1f245ac6584097c53be60_r.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>光猫改造 篇一：超级管理员密码破解（E8-C-EPON RG201O-CA_V1A2)</title>
      <link>https://newzone.top/posts/2017-10-18-light_cat_e8-c-epon_admin.html</link>
      <guid>https://newzone.top/posts/2017-10-18-light_cat_e8-c-epon_admin.html</guid>
      <source url="https://newzone.top/rss.xml">光猫改造 篇一：超级管理员密码破解（E8-C-EPON RG201O-CA_V1A2)</source>
      <description>为什么要获得光猫超级密码？ 它可以用于端口映射（eMule high ID）和桥接模式（路由器掌控拨号，但不兼容固定电话）。网上关于光猫超级密码的获取攻略大多是在 2012-14 年发布的，现在已经不能使用了。 破解测试环境 运营商：上海电信 光猫型号：贝尔 E8-C-EPON 硬件版本：RG201O-CA_V1A2 软件版本：E201OCAA2V11S 光猫超级密码破解 地址栏输入 192.168.1.1，用户名：&amp;lt;光猫背面&amp;gt;，密码：&amp;lt;光猫背面&amp;gt;，登录管理界面。 在浏览器地址栏输入 192.168.1.1/backupsettings.txt，将 backupsettings.txt 文件导出并备份在电脑上。如果无法打开，请改为输入 192.168.1.1/backupsettings.conf，并做好备份。 打开下载的 backupsettings.txt 或 backupsettings.conf 文件，搜索 TeleComAccount，两个 password 之间就是超级密码。超级账号是 telecomadmin。 输入地址 192.168.1.1，用刚获取的超级密码登录，然后可以进行端口映射和设备桥接。</description>
      <category>网络</category>
      <pubDate>Wed, 18 Oct 2017 18:28:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 为什么要获得光猫超级密码？</h2>
<p>它可以用于端口映射（eMule high ID）和桥接模式（路由器掌控拨号，但不兼容固定电话）。网上关于光猫超级密码的获取攻略大多是在 2012-14 年发布的，现在已经不能使用了。</p>
<h2> 破解测试环境</h2>
<p>运营商：上海电信
光猫型号：贝尔 E8-C-EPON
硬件版本：RG201O-CA_V1A2
软件版本：E201OCAA2V11S</p>
<h2> 光猫超级密码破解</h2>
<ol>
<li>
<p>地址栏输入 <code>192.168.1.1</code>，用户名：&lt;光猫背面&gt;，密码：&lt;光猫背面&gt;，登录管理界面。</p>
<figure><img src="https://pic1.zhimg.com/v2-9e43bc86b9095f3f6c2cfa4bd58dcd68_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>在浏览器地址栏输入 <code>192.168.1.1/backupsettings.txt</code>，将 <code>backupsettings.txt</code> 文件导出并备份在电脑上。如果无法打开，请改为输入 <code>192.168.1.1/backupsettings.conf</code>，并做好备份。</p>
</li>
<li>
<p>打开下载的 <code>backupsettings.txt</code> 或 <code>backupsettings.conf</code> 文件，搜索 <code>TeleComAccount</code>，两个 password 之间就是超级密码。超级账号是 <code>telecomadmin</code>。</p>
<figure><img src="https://pic3.zhimg.com/v2-ee441dd18cc8e5f6303fdaef82b6d476_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>输入地址 <code>192.168.1.1</code>，用刚获取的超级密码登录，然后可以进行端口映射和设备桥接。</p>
<figure><img src="https://pic1.zhimg.com/v2-31d6bb6b90be541c186a360fe2dd323c_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
</ol>
<p>如果新安装的光猫无法获取超级密码，可以使用运营商的官方应用进行映射。</p>
]]></content:encoded>
      <enclosure url="https://pic1.zhimg.com/v2-9e43bc86b9095f3f6c2cfa4bd58dcd68_r.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>光猫改造 篇二：光猫 + 路由器，实现端口映射</title>
      <link>https://newzone.top/posts/2017-10-18-light_cat_port_forwarding.html</link>
      <guid>https://newzone.top/posts/2017-10-18-light_cat_port_forwarding.html</guid>
      <source url="https://newzone.top/rss.xml">光猫改造 篇二：光猫 + 路由器，实现端口映射</source>
      <description>光猫默认没有管理权限，需要先获得光猫的超管密码，参考光猫改造 篇一：超级管理员密码破解（E8-C-EPON RG201O-CA_V1A2）。 光猫端口映射步骤： 登陆光猫管理地址 192.168.1.1，应用 → 高级 NAT 设置 →DMZ 设置，启用 DMZ 主机绑定路由器地址（路由器 WAN 口 IP 地址 -192.168.1.X) 登陆路由器管理地址 192.168.X.X。这里已梅林 AC5300 为图例。 在路由器设置选项中找到“端口转发”，按要求设置端口。我这是 eMule TCP 和 UDP 转发，设置完成后，变成 High ID。</description>
      <category>网络</category>
      <pubDate>Wed, 18 Oct 2017 22:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>光猫默认没有管理权限，需要先获得光猫的超管密码，参考<a href="https://newzone.top/posts/2017-10-18-Light_cat_E8-C-EPON_admin.html" target="_blank" rel="noopener noreferrer">光猫改造 篇一：超级管理员密码破解（E8-C-EPON RG201O-CA_V1A2）</a>。</p>
<p><strong>光猫端口映射步骤：</strong></p>
<ol>
<li>
<p>登陆光猫管理地址 192.168.1.1，应用 → 高级 NAT 设置 →DMZ 设置，启用 DMZ 主机绑定路由器地址（路由器 WAN 口 IP 地址 -192.168.1.X)</p>
<figure><img src="https://pic2.zhimg.com/v2-658d5433201b79da169a520f4b19d495_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>登陆路由器管理地址 192.168.X.X。这里已梅林 AC5300 为图例。</p>
<figure><img src="https://pic4.zhimg.com/v2-32825a6d3d75f4bfe5668f1b0d6c6683_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>在路由器设置选项中找到“端口转发”，按要求设置端口。我这是 eMule TCP 和 UDP 转发，设置完成后，变成 High ID。</p>
<figure><img src="https://pic2.zhimg.com/v2-8f3eb2c42fd5d1a98f1345c6a5855e99_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<figure><img src="https://pic2.zhimg.com/v2-b4f5179278da52409f4a04ce7d139f99_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
</ol>
]]></content:encoded>
      <enclosure url="https://pic2.zhimg.com/v2-658d5433201b79da169a520f4b19d495_r.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>小型网站管理员，快放弃 CDN！</title>
      <link>https://newzone.top/posts/2018-01-19-forget_the_cdn.html</link>
      <guid>https://newzone.top/posts/2018-01-19-forget_the_cdn.html</guid>
      <source url="https://newzone.top/rss.xml">小型网站管理员，快放弃 CDN！</source>
      <description>CDN 的全称是 Content Delivery Network，即内容分发网络。其基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输的更快、更稳定。通过在网络各处放置节点服务器所构成的在现有的互联网基础之上的一层智能虚拟网络，CDN 系统能够实时地根据网络流量和各节点的连接、负载状况以及到用户的距离和响应时间等综合信息将用户的请求重新导向离用户最近的服务节点上。其目的是使用户可就近取得所需内容，解决 Internet 网络拥挤的状况，提高用户访问网站的响应速度。 国内 CDN 有阿里云、腾讯、百度、网宿、七牛云、又拍云等。</description>
      <category>服务器</category>
      <pubDate>Fri, 19 Jan 2018 12:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<blockquote>
<p>CDN 的全称是 Content Delivery Network，即内容分发网络。其基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输的更快、更稳定。通过在网络各处放置节点服务器所构成的在现有的互联网基础之上的一层智能虚拟网络，CDN 系统能够实时地根据网络流量和各节点的连接、负载状况以及到用户的距离和响应时间等综合信息将用户的请求重新导向离用户最近的服务节点上。其目的是使用户可就近取得所需内容，解决 Internet 网络拥挤的状况，提高用户访问网站的响应速度。</p>
</blockquote>
<p>国内 CDN 有阿里云、腾讯、百度、网宿、七牛云、又拍云等。</p>
<p>这里以阿里云 CDN 为例。我之前使用阿里云全站 CDN，一直以为速度会加快。但命中率只有 7%，在更换为 ECS 后，命中率更降为 2%。</p>
<p>更可怕的是，我提交工单后才得到的事实。<strong>CDN 运营商会根据 DNS 分配就近分配 CDN 节点，抓取网站缓存。</strong></p>
<p>第一反应：「不错啊。如果网站在北京，访客在上海，直接访问上海的节点，速度必然要快一些。」</p>
<p>但事实并没有这么完美。<strong>CDN 是根据本地 DNS 来分配节点。</strong></p>
<p>你从上海放出访问申请，DNS 有可能帮你分配去广东的节点。极端情况下，有可能分配到不同运营商，<strong>导致无法打开网站。</strong></p>
<p>我进行了三个测试，本地网络环境都是上海电信，更换了 DNS 设置。</p>
<p>第一次测试使用 114DNS，分配了广州鹏博士网络，网站打不开。提交工单后，客服反映<strong>这个节点是局域网节点，只有鹏博士网络才能打开。</strong></p>
<p>第二次测试使用电信默认 DNS，分配苏州电信，网站正常。</p>
<p>第三次测试使用阿里云 DNS，分配杭州电信，网站正常</p>
<p>后面两次虽然都能打开网站，但没有一个分配在上海电信，这种加速又能快多少呢？</p>
<p>在网站<strong>配置足够、流量不大（日均访客 1000 以内）</strong> 时，不建议使用全站 CDN，这只会拖累访问体验。小网站只适合将图片部署在 CDN。</p>
]]></content:encoded>
    </item>
    <item>
      <title>雇个机器人帮你干活</title>
      <link>https://newzone.top/posts/2018-01-31-hire_a_robot.html</link>
      <guid>https://newzone.top/posts/2018-01-31-hire_a_robot.html</guid>
      <source url="https://newzone.top/rss.xml">雇个机器人帮你干活</source>
      <description>机器人会取代你工作！ 计算云会取代你工作！ AI 会取代你的工作！ 我相信科技终究有一天会消灭所有工作，但我们这代人的无奈就是很难等到这一天。 作为懒人、宅男，等不及了怎么办？ 既然还没被取代，那就雇个机器人帮你干活！ 我每天第一件事是去各个网站看热门新闻、行业资料。以前是用 RSS，但 RSS 被视为落后，越来越多的网站不再提供 RSS 源。离开 RSS，我就一直没找到更合适的方法去将内容聚合起来，不得不在一个个网站间疲于奔命，逐渐不再看内容。</description>
      <category>自动化</category>
      <pubDate>Wed, 31 Jan 2018 22:51:00 GMT</pubDate>
      <content:encoded><![CDATA[<blockquote>
<p>机器人会取代你工作！
计算云会取代你工作！
AI 会取代你的工作！</p>
</blockquote>
<p>我相信科技终究有一天会消灭所有工作，但我们这代人的无奈就是很难等到这一天。</p>
<p>作为懒人、宅男，等不及了怎么办？</p>
<p>既然还没被取代，那就<strong>雇个机器人帮你干活</strong>！</p>
<p>我每天第一件事是去各个网站看热门新闻、行业资料。以前是用 RSS，但 RSS 被视为落后，越来越多的网站不再提供 RSS 源。离开 RSS，我就一直没找到更合适的方法去将内容聚合起来，不得不在一个个网站间疲于奔命，逐渐不再看内容。</p>
<blockquote>
<p>RSS(Really Simple Syndication) 是一种描述和同步网站内容的格式，是使用最广泛的 XML 应用。简易信息聚合（也叫聚合内容）是一种 RSS 基于 XML 标准，在互联网上被广泛采用的内容包装和投递协议。</p>
</blockquote>
<ul class="task-list-container">
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 增加 <code>Alfred</code> 搜索</label></li>
</ul>
<p><strong>直到遇到了我的第一个机器人雇员 <a href="https://github.com/huginn/huginn" target="_blank" rel="noopener noreferrer">Huginn</a></strong></p>
<blockquote>
<p>Huginn 是一个可以创建为你在线执行自动化任务的系统。Huginn 可以读取网页，监测事件并且执行符合你需求的动作。Huginn 通过 agents 创建并执行任务（事件流）。你可以将它看作是一个运行在你自己服务器上的 IFTTT 或 Zapier。</p>
</blockquote>
<p>Huginn 帮我将所有信息聚合成 RSS，24 小时帮我获取我要的内容。</p>
<ul>
<li><a href="http://news.163.com/rank" target="_blank" rel="noopener noreferrer">网易热门新闻</a>：抓取网易顶贴最多的 100 条新闻</li>
<li><a href="http://top.baidu.com/buzz?b=1" target="_blank" rel="noopener noreferrer">百度实时热点</a>：实时更新每天的百度热点</li>
<li><a href="https://www.guokr.com/" target="_blank" rel="noopener noreferrer">果壳网</a>：果壳首页推荐，官方更新速度较慢，刚好可以了解些奇思妙想</li>
<li>工作类：梅花、SocialBeta、数英网、艾瑞网</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>提早晚餐，饿死算逑</title>
      <link>https://newzone.top/posts/2018-03-06-no_more_dinner.html</link>
      <guid>https://newzone.top/posts/2018-03-06-no_more_dinner.html</guid>
      <source url="https://newzone.top/rss.xml">提早晚餐，饿死算逑</source>
      <description>上大学后，每天晚上都打游戏点「叉鸭例牌 + 两碗米饭」，体重成功上到 85KG。后来减肥在 13 年达到历史低点 75KG，但后来持续上升，在 18 年春节达到顶点，93KG，比婚前胖了38 斤。 目前以在家办公为主，很少出门，每天走路都没走多少，更别说运动了。 解决方案： 增加运动：每天划船机 2 公里，后期再逐步加量 调节饮食，多喝水不吃炸鸡 早餐：9 点，牛奶 + 麦片 午餐：12 点，正常 晚餐：4 点，晚餐后不再吃东西</description>
      <category>健康</category>
      <pubDate>Tue, 06 Mar 2018 22:06:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>上大学后，每天晚上都打游戏点「叉鸭例牌 + 两碗米饭」，体重成功上到 85KG。后来减肥在 13 年达到历史低点 75KG，但后来持续上升，在 18 年春节达到顶点，93KG，比婚前胖了<strong>38 斤</strong>。</p>
<p>目前以在家办公为主，很少出门，每天走路都没走多少，更别说运动了。</p>
<p><strong>解决方案：</strong></p>
<ol>
<li>
<p>增加运动：每天划船机 2 公里，后期再逐步加量</p>
</li>
<li>
<p>调节饮食，多喝水不吃炸鸡</p>
<ul>
<li>
<p>早餐：9 点，牛奶 + 麦片</p>
</li>
<li>
<p>午餐：12 点，正常</p>
</li>
<li>
<p>晚餐：4 点，晚餐后不再吃东西</p>
</li>
</ul>
</li>
</ol>
<table>
<thead>
<tr>
<th>日期</th>
<th>历史体重</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>2012 年 9 月 2 日 23:04:51</td>
<td>85KG</td>
<td>今天吃了 3 个苹果，3 块钱煎饼。刚洗完澡</td>
</tr>
<tr>
<td>2013 年 4 月 11 日 21:24:54</td>
<td>86.4KG</td>
<td>脱去外套</td>
</tr>
<tr>
<td>2013 年 9 月 5 日 8 点</td>
<td>81.8kg</td>
<td></td>
</tr>
<tr>
<td>2013 年 10 月 3 日 9:55:02</td>
<td>78.7KG</td>
<td></td>
</tr>
<tr>
<td>2014 年 2 月 25 日春节</td>
<td>83KG</td>
<td>重新开始减重</td>
</tr>
<tr>
<td>2014 年 10 月 19 日 16:50:10</td>
<td>86.1KG</td>
<td></td>
</tr>
<tr>
<td>2016 年 8 月 4 日</td>
<td>88KG</td>
<td></td>
</tr>
<tr>
<td>2018 年 3 月 6 日 晚</td>
<td>91.6 KG</td>
<td></td>
</tr>
<tr>
<td>2020 年 10 月 6 日</td>
<td>95 KG</td>
<td>巅峰，开始营养健康餐</td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    <item>
      <title>新手建站神器 - 宝塔面板</title>
      <link>https://newzone.top/posts/2018-04-30-baota_deploy_vps.html</link>
      <guid>https://newzone.top/posts/2018-04-30-baota_deploy_vps.html</guid>
      <source url="https://newzone.top/rss.xml">新手建站神器 - 宝塔面板</source>
      <description>新手建站最大的痛苦就是代码太多，无法轻松管理。 国产的宝塔面板完美解决新手建站难题，在可视化界面中为服务器安装应用、同步文件、定期执行代码、管理服务。 一键创建网站、FTP、数据库、SSL；安全管理，计划任务，文件管理，PHP 多版本共存及切换；自带 LNMP 与 LAMP 宝塔面板界面图</description>
      <category>服务器</category>
      <pubDate>Mon, 30 Apr 2018 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>新手建站最大的痛苦就是代码太多，无法轻松管理。</p>
<p>国产的宝塔面板完美解决新手建站难题，在可视化界面中为服务器安装应用、同步文件、定期执行代码、管理服务。</p>
<blockquote>
<p>一键创建网站、FTP、数据库、SSL；安全管理，计划任务，文件管理，PHP 多版本共存及切换；自带 LNMP 与 LAMP</p>
</blockquote>
<figure><img src="https://tc.seoipo.com/18-4-30/97791164.jpg" alt="宝塔面板界面图" tabindex="0" loading="lazy"><figcaption>宝塔面板界面图</figcaption></figure>
<p>宝塔安装说明：<a href="https://www.bt.cn/bbs/thread-1186-1-1.html" target="_blank" rel="noopener noreferrer">https://www.bt.cn/bbs/thread-1186-1-1.html</a></p>
<h2> 宝塔安装 LNMP 或 LAMP 环境</h2>
<p><strong>LNMP</strong> 和 <strong>LAMP</strong> 都是成熟的建站环境，根据自己的需求二选一即可。
如果有定制需求，可以在左侧「软件管理」中选定要安装的环境
<img src="https://tc.seoipo.com/18-4-30/21951434.jpg" alt="软件安装界面" loading="lazy"></p>
]]></content:encoded>
      <enclosure url="https://tc.seoipo.com/18-4-30/97791164.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>Jekyll 篇一：3 分钟搭建 Github Pages 博客</title>
      <link>https://newzone.top/posts/2018-05-01-jekyll_blog_on_github_pages.html</link>
      <guid>https://newzone.top/posts/2018-05-01-jekyll_blog_on_github_pages.html</guid>
      <source url="https://newzone.top/rss.xml">Jekyll 篇一：3 分钟搭建 Github Pages 博客</source>
      <description>一直都想建立自己的个人博客，重装过 N 次 WordPress，又因为种种原因而放弃。 偶然看到了 Hux 的 Jekyll 模板，被漂亮的设计给迷住了。Github Pages 默认支持 Jekyll 环境，并提供了免费空间和流量，因此开始了 Github Pages + Jekyll 之路。 搭建流程 注册并登录 Github。 选择一个喜欢的 Jekyll 模板, 进入对应的 Github 主页。我选了黄玄的 Hux Blog。 点击 Fork, 将喜欢的模板复制到自己的 Github 仓库中。 点击 Setting, 修改 Repository name 为 xxx.github.io, xxx 是你的 Github 用户名。 同一页面选择「Code and automation」&amp;gt;「Pages」&amp;gt;「Build and deployment」&amp;gt;「Branch」, 将 master branch 设为 Github Pages 来源，网站运行目录默认为 /(root)。设置好后，点击「Save」。 最后，按页面提示访问链接 https://xxx.github.io/，新博客搭建完毕。</description>
      <category>博客</category>
      <pubDate>Tue, 01 May 2018 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>一直都想建立自己的个人博客，重装过 N 次 WordPress，又因为种种原因而放弃。</p>
<p>偶然看到了 Hux 的 Jekyll 模板，被漂亮的设计给迷住了。Github Pages 默认支持 Jekyll 环境，并提供了免费空间和流量，因此开始了 Github Pages + Jekyll 之路。</p>
<h3> 搭建流程</h3>
<ol>
<li>
<p>注册并登录 <a href="https://github.com/" target="_blank" rel="noopener noreferrer">Github</a>。</p>
</li>
<li>
<p>选择一个喜欢的 <a href="http://jekyllthemes.org/" target="_blank" rel="noopener noreferrer">Jekyll 模板</a>, 进入对应的 Github 主页。我选了黄玄的 <a href="https://github.com/Huxpro/huxpro.github.io" target="_blank" rel="noopener noreferrer">Hux Blog</a>。</p>
</li>
<li>
<p>点击 <code>Fork</code>, 将喜欢的模板复制到自己的 Github 仓库中。</p>
<figure><img src="https://tc.seoipo.com/20180505201522.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>点击 <code>Setting</code>, 修改 <code>Repository name</code> 为 <code>xxx.github.io</code>, <code>xxx</code> 是你的 Github 用户名。</p>
<figure><img src="https://tc.seoipo.com/20180505202201.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>同一页面选择「Code and automation」&gt;「Pages」&gt;「Build and deployment」&gt;「Branch」, 将 master branch 设为 Github Pages 来源，网站运行目录默认为 <code>/(root)</code>。设置好后，点击「Save」。</p>
<figure><img src="https://tc.seoipo.com/2022-08-08-11-42-16.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>最后，按页面提示访问链接 <code>https://xxx.github.io/</code>，新博客搭建完毕。</p>
<figure><img src="https://tc.seoipo.com/20180505202859.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
</ol>
]]></content:encoded>
      <enclosure url="https://tc.seoipo.com/20180505201522.png?imageMogr2/format/webp" type="image/"/>
    </item>
    <item>
      <title>Jekyll 扩展篇：服务器搭建 Jekyll 博客</title>
      <link>https://newzone.top/posts/2018-05-02-jekyll_blog_on_vps.html</link>
      <guid>https://newzone.top/posts/2018-05-02-jekyll_blog_on_vps.html</guid>
      <source url="https://newzone.top/rss.xml">Jekyll 扩展篇：服务器搭建 Jekyll 博客</source>
      <description>Github 墙得太厉害，就想在服务器上自建 Jekyll 环境，用上 Travis CI 和 Docker 后才发现完全没必要。。 Jekyll 环境官方安装指南： 使用 RVM 安装 Ruby (rvm -&amp;gt; ruby -&amp;gt; gem 网上大量教程就不赘述了) 安装 jekyll：gem install jekyll。 进入 jekyll 网站，执行命令行 jekyll build，生成 Jekyll 静态网页。 网站的执行目录需要指定在 _site，这是 Jekyll 生成的静态页面目录。之后每次更新博客，都需要进入服务器执行一次 jekyll build，重新生成静态页面。</description>
      <category>博客</category>
      <pubDate>Wed, 02 May 2018 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>Github 墙得太厉害，就想在服务器上自建 Jekyll 环境，用上 Travis CI 和 Docker 后才发现完全没必要。。</p>
<p>Jekyll 环境官方<a href="https://www.jekyll.com.cn/docs/quickstart/" target="_blank" rel="noopener noreferrer">安装指南</a>：</p>
<ol>
<li>
<p>使用 RVM 安装 Ruby (rvm -&gt; ruby -&gt; gem 网上大量教程就不赘述了)</p>
</li>
<li>
<p>安装 jekyll：<code>gem install jekyll</code>。</p>
</li>
<li>
<p>进入 jekyll 网站，执行命令行 <code>jekyll build</code>，生成 Jekyll 静态网页。</p>
</li>
<li>
<p>网站的执行目录需要指定在 <code>_site</code>，这是 Jekyll 生成的静态页面目录。之后每次更新博客，都需要进入服务器执行一次 <code>jekyll build</code>，重新生成静态页面。</p>
</li>
</ol>
<p>愿意折腾的话，可以使用 Travis CI 和 Docker 完成全自动化更新。</p>
]]></content:encoded>
    </item>
    <item>
      <title>Jekyll 篇二：自动部署服务器博客</title>
      <link>https://newzone.top/posts/2018-05-03-jekyll_blog_autodeploy.html</link>
      <guid>https://newzone.top/posts/2018-05-03-jekyll_blog_autodeploy.html</guid>
      <source url="https://newzone.top/rss.xml">Jekyll 篇二：自动部署服务器博客</source>
      <description>Github 上搭建 Jekyll 是最方便的，空间免费、流量免费、部署简单。但 Github 属于被墙状态，将博客部署在那，速度实在太慢。在玩了几天后，我开始在服务器上直接搭建 Jekyll 博客。 服务器搭建需要人工执行 jekyll build, 完全背离了最开始搭建博客的初衷-方便。之后结合了网络上多个自动化方案，选定入门成本最低的 Github -&amp;gt; Travis CI -&amp;gt; Docker-&amp;gt; VPS。</description>
      <category>博客</category>
      <pubDate>Thu, 03 May 2018 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>Github 上搭建 Jekyll 是最方便的，空间免费、流量免费、部署简单。但 Github 属于被墙状态，将博客部署在那，速度实在太慢。在玩了几天后，我开始在服务器上直接搭建 Jekyll 博客。</p>
<p>服务器搭建需要人工执行 <code>jekyll build</code>, 完全背离了最开始搭建博客的初衷-<strong>方便</strong>。之后结合了网络上多个自动化方案，选定入门成本最低的 <code>Github</code> -&gt; <code>Travis CI</code> -&gt; <code>Docker</code>-&gt; <code>VPS</code>。</p>
<h2> 搭建思路</h2>
<ul>
<li>本地提交博客 Markdown 文件 到 Github 源文件 repository</li>
<li>Github 触发 Travis CI 执行自动编译</li>
<li>Travis CI 编译后 push 静态文件到 Github 静态文件 repository</li>
<li>Travis CI 通知 Docker 重建镜像（预计 5 分钟）</li>
<li>服务器休眠 5 分钟后，Travis CI 通知服务器</li>
<li>服务器拉取最新镜像，然后停止并删除原容器，用最新镜像重建容器</li>
</ul>
<h2> Travis CI 基本配置</h2>
<p>Travis CI 对于开源项目完全免费，并且能自动感知到 Github 的 commit，帮我们解决了静态文件生成问题。</p>
<p>先用 Github 登录 Travis CI，然后点击最右侧的头像，开启想要使用 Travis CI 的项目</p>
<figure><img src="https://tc.seoipo.com/20180504135244.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>点击设置按钮，进入项目设置</p>
<figure><img src="https://tc.seoipo.com/20180504135541.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2> 静态文件更新</h2>
<p>Travis CI push 静态文件到 Github 通过 Github 的 token 实现授权，push 代码如下</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>$DEPLOY_TOKEN</code> 是从 Github 授权得到的，「setting」&gt;「Developer settings」&gt;「Personal access tokens」&gt;「Generate new token」, 然后给于相应权限即可，<code>admin:public_key, admin:repo_hook, repo</code>。</p>
<figure><img src="https://tc.seoipo.com/20180504153729.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>进入 Travis 的 repo 项目，「More options」&gt;「Settings」&gt;「Environment Variables」, 新建一个变量<code>DEPLOY_TOKEN</code>，把 Github 的授权 token 保存在里面。</p>
<figure><img src="https://tc.seoipo.com/20180504154229.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>Travis CI 提供了存放加密文件的方式，参考 <a href="https://docs.travis-ci.com/user/encrypting-files/" target="_blank" rel="noopener noreferrer">官方文档</a>。</p>
<h2> Dockerfiles 设置</h2>
<p>在 Github 中新建一个 repository，可以命名为 <code>dockerfiles</code>, 专门用来存储 Docker 镜像的设置文件。在 <code>dockerfiles</code> 新建文件夹 <code>jekyll</code> ，并在 <code>jekyll</code> 中新建文件 <code>Dockerfile</code>, 放入以下代码：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将 Travis CI 生成的静态文件推送到 Github，博客的 docker 化部署，采用 nginx + 静态文件 方式</p>
<p>样例 Dockerfile: <a href="https://github.com/mritd/dockerfile/tree/master/mritd" target="_blank" rel="noopener noreferrer">https://github.com/mritd/dockerfile/tree/master/mritd</a></p>
<h2> Docker 镜像设置</h2>
<p>注册并登录 <a href="https://hub.docker.com" target="_blank" rel="noopener noreferrer">Docker Hub</a>，点击 「Create」&gt;「Create Automated Build」&gt;「Create Auto-build Github」, 选择之前新建的 <code>dockerfiles</code> repository。</p>
<p>建立 Automated Build 镜像后，进入 <code>Build Seeting</code>, 点击 Trigger，建立第一个 Docker 镜像。</p>
<figure><img src="https://tc.seoipo.com/20180504161016.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>然后在「Building Settings」&gt;「Build Triggers」&gt;「Activate Triggers」，复制 Trigger URL。</p>
<figure><img src="https://tc.seoipo.com/20180504161245.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>然后在服务器上执行下列代码，拉取并<strong>启动 Docker 镜像</strong>。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>--name=jekyll_blog 中的 <code>jekyll_blog</code> 是对容器的命名，方便后续操作。</p>
<p>-d 让容器在后台运行。</p>
<p>-p 映射端口：80 是容器内对应的端口，39100 是主机端口，也就是最终用户访问的端口，本端口可以自由选择。</p>
<p>--privileged=true 关闭安全权限，否则你容器操作文件夹没有权限。</p>
<p>--<code>rockben/jekyll:latest</code> 是容器名称，可省略 <code>:latest</code>。</p>
<p>运行容器后，访问 <code>seoipo.com:39100</code> 就可以看到镜像网页。如果每次用端口访问，可以在域名 DNS 中设置显性 URL，将二级域名 <code>blog.seoipo.com</code> 指向 <code>seoipo.com:39100</code></p>
<h3> Docker 扩展阅读</h3>
<p><strong>Docker 命令符</strong>：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>docker run</code> 进阶设置</strong></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>-v 挂载目录/root/software 本地目录 /software 容器目录，在创建前容器是没有 software 目录的，docker 容器会自己创建
--<code>/bin/bash</code> 这是 CMD 命令行，可不填</p>
<h2> SSH 免密码登录</h2>
<p>Travis 不能利用用户名和密码登陆，我们只有利用<strong>SSH 免密登陆</strong>服务器，更新并重启 Docker 容器。</p>
<p><strong>1、生成公钥/私钥对</strong></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2、将生成的公钥添加为受信列表</strong></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3、在.ssh 目录下新增配置文件 config</strong></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>点击 <code>i</code> 进入编辑状态，输入下列代码。完毕后，点击 <code>Esc</code> 退出编辑状况，然后输入 <code>:wq!</code> 强制保存后离开文件</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4、在 Linux 服务器安装 Travis 客户端</strong>（rvm -&gt; ruby -&gt; gem -&gt;Travis）</p>
<p><code>gem install travis</code></p>
<p><strong>5、服务器创建空白<code>.travis.yml</code>文件</strong></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>6、服务器登录 Travis，添加加密的私钥至代码仓库</strong></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>成功加密后，会提示</strong></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>
<p><strong>将新生成的 <code>id_rsa.enc</code> 文件上传到 Github 源文件 repository 中</strong></p>
</li>
<li>
<p>将 <code>.travis.yml</code> 中的 <code>openssl aes-256-cbc -K $encrypted_5c280379e96c_key -iv $encrypted_5c280379e96c_iv -in id_rsa.enc -out ~/.ssh/id_rsa -d</code> 放入最终的 <code>.travis.yml</code> 文件中。</p>
<figure><img src="https://tc.seoipo.com/20180504184508.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
</ul>
<h2> travis.yml 配置</h2>
<p>当项目内存在 <code>.travis.yml</code> 文件时，Travis CI 会按照其定义完成自动 build 过程，所以开启了上述配置以后还要在 Github 的 Jekyll 源文件项目下创建 <code>.travis.yml</code> 配置文件。</p>
<figure><img src="https://tc.seoipo.com/20180504141827.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><code>.travis.yml</code> 配置文件内容样例如下：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>具体 .travis.yml 配置，请参考 <a href="https://docs.travis-ci.com/" target="_blank" rel="noopener noreferrer">官方文档</a>。</p>
<p>参考资料&amp;引用：</p>
<ul>
<li>
<p><a href="https://github.com/Huxpro/huxpro.github.io" target="_blank" rel="noopener noreferrer">Jekyll 模板 hux blog</a></p>
</li>
<li>
<p><a href="https://zhuanlan.zhihu.com/p/25066056" target="_blank" rel="noopener noreferrer">一点都不高大上，手把手教你使用 Travis CI 实现持续部署</a></p>
</li>
<li>
<p><a href="https://mritd.me/2017/02/25/jekyll-blog-+-travis-ci-auto-deploy/" target="_blank" rel="noopener noreferrer">Jekyll + Travis CI 自动化部署博客</a></p>
</li>
<li>
<p><a href="https://juejin.im/post/5a9e1a5751882555712bd8e1" target="_blank" rel="noopener noreferrer">Travis-CI 自动化测试并部署至自己的 CentOS 服务器</a></p>
</li>
<li>
<p><a href="https://segmentfault.com/a/1190000011218410" target="_blank" rel="noopener noreferrer">Travis CI 系列：自动化部署博客</a></p>
</li>
<li>
<p><a href="https://juejin.im/post/5a2941ad6fb9a045030ffc95" target="_blank" rel="noopener noreferrer">SSH 免密登录远程服务器</a></p>
</li>
<li>
<p><a href="http://www.cnblogs.com/scofi/p/6617394.html" target="_blank" rel="noopener noreferrer">SSH 公钥登录原理</a></p>
</li>
<li>
<p><a href="https://blog.csdn.net/yinweitao12/article/details/73165914" target="_blank" rel="noopener noreferrer">如何将 dockerhub 与 github 关联</a></p>
</li>
<li>
<p><a href="http://www.cnblogs.com/YasinXiao/p/7736075.html" target="_blank" rel="noopener noreferrer">docker 启动，端口映射，挂载本地目录</a></p>
</li>
<li>
<p><a href="https://yeasy.gitbooks.io/docker_practice/" target="_blank" rel="noopener noreferrer">Docker — 从入门到实践</a></p>
</li>
</ul>
]]></content:encoded>
      <enclosure url="https://tc.seoipo.com/20180504135244.png?imageMogr2/format/webp" type="image/"/>
    </item>
  </channel>
</rss>